import java.awt.Point;
import java.util.ArrayList;
import org.simbrain.network.NetworkComponent;
import org.simbrain.network.connections.*;
import org.simbrain.network.interfaces.*;
import org.simbrain.network.layouts.*;
import org.simbrain.network.networks.*;
import org.simbrain.network.neurons.*;
import org.simbrain.network.synapses.*;
import org.simbrain.workspace.*;
import org.simbrain.world.odorworld.*;
import org.simbrain.world.odorworld.entities.*;
import org.simbrain.util.environment.*;

{

	// Variables
	int TOP_POSITION = 50;
	int COMPONENT_WIDTH = 350;
	int COMPONENT_HEIGHT = 350;
	int worldHeight = 350;
	int worldWidth = 350;

        // Make a 2-d environment
        OdorWorldComponent odorWorld = new OdorWorldComponent("Odor World");
        odorWorld.getWorld().setWorldHeight(worldHeight);
        odorWorld.getWorld().setWorldWidth(worldWidth);
        workspace.addWorkspaceComponent(odorWorld);
        desktop.getDesktopComponent(odorWorld).getParentFrame().setBounds(508, 34, worldWidth, worldHeight);
        // Mouse
        MovingEntity mouse = new MovingEntity(odorWorld.getWorld(), "MightyMouse", new double[]{200,200});
        odorWorld.getWorld().addEntity(mouse);
        // Cheese 1
        StaticEntity cheese = new StaticEntity(odorWorld.getWorld(), "Swiss.gif", new double[]{40,200});
        cheese.setSmellSource(new SmellSource(odorWorld.getWorld(), new double[] {1, 1, 0, 0}, SmellSource.DecayFunction.GAUSSIAN, cheese.getLocation()));
        odorWorld.getWorld().addEntity(cheese);

        // Simple net
        NetworkComponent networkComponent = new NetworkComponent("Vehicle");
        workspace.addWorkspaceComponent(networkComponent);
        desktop.getDesktopComponent(networkComponent).getParentFrame().setBounds(20, TOP_POSITION,COMPONENT_WIDTH, COMPONENT_HEIGHT);
        RootNetwork network = networkComponent.getRootNetwork();
        LinearNeuron neuron1 = new LinearNeuron();
        LinearNeuron neuron2 = new LinearNeuron();
        ClampedNeuron neuron3 = new ClampedNeuron();
        LinearNeuron input1 = new LinearNeuron();
        LinearNeuron input2 = new LinearNeuron();
        neuron1.setUpperBound(10);
        neuron1.setX(10);
        neuron1.setY(10);         
        neuron2.setUpperBound(10);
        neuron2.setX(100);
        neuron2.setY(10);
        neuron3.setX(55);
        neuron3.setY(10);
        neuron3.setUpperBound(10);
        neuron3.setIncrement(.5);
        neuron3.setActivation(2);
        input1.setX(10);
        input1.setY(100);
        input2.setX(100);
        input2.setY(100);

        ClampedSynapse inputOutput1 = new ClampedSynapse(input1, neuron1);
        ClampedSynapse inputOutput2 = new ClampedSynapse(input2, neuron2);
	inputOutput1.setStrength(2);
	inputOutput2.setStrength(2);
        network.addNeuron(neuron1);
        network.addNeuron(neuron2);
        network.addNeuron(neuron3);
        network.addNeuron(input1);
        network.addNeuron(input2);
        network.addSynapse(inputOutput1);
        network.addSynapse(inputOutput2);
            
        //Couple Mouse Whiskers to neurons
        ProducingAttribute leftWhisker1 = odorWorld.getProducingAttribute("MightyMouse","Left[1]");
        ProducingAttribute rightWhisker1 = odorWorld.getProducingAttribute("MightyMouse","Right[1]");
        ConsumingAttribute inputNeuron1 = networkComponent.getConsumingAttribute("Neuron_4", "Activation"); 
        ConsumingAttribute inputNeuron2 = networkComponent.getConsumingAttribute("Neuron_5", "Activation"); 
        workspace.getCouplingManager().addCoupling(new Coupling(leftWhisker1, inputNeuron1));
        workspace.getCouplingManager().addCoupling(new Coupling(rightWhisker1, inputNeuron2));
 
        //Couple Output Neurons to motion
        ProducingAttribute leftNeuron = networkComponent.getProducingAttribute("Neuron_1", "Activation"); 
        ProducingAttribute centerNeuron = networkComponent.getProducingAttribute("Neuron_3", "Activation"); 
        ProducingAttribute rightNeuron = networkComponent.getProducingAttribute("Neuron_2", "Activation"); 
        ConsumingAttribute turnLeft = odorWorld.getConsumingAttribute("MightyMouse", "Left"); 
        ConsumingAttribute goStraight = odorWorld.getConsumingAttribute("MightyMouse", "Straight"); 
        ConsumingAttribute turnRight = odorWorld.getConsumingAttribute("MightyMouse", "Right"); 
        workspace.getCouplingManager().addCoupling(new Coupling(leftNeuron, turnLeft));
        workspace.getCouplingManager().addCoupling(new Coupling(centerNeuron, goStraight));
        workspace.getCouplingManager().addCoupling(new Coupling(rightNeuron, turnRight));
        
}