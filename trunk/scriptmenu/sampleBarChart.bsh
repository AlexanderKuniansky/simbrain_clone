package org.simbrain;

import java.awt.Point;

import org.simbrain.network.NetworkComponent;
import org.simbrain.network.connections.Sparse;
import org.simbrain.network.interfaces.RootNetwork;
import org.simbrain.network.layouts.GridLayout;
import org.simbrain.network.neurons.*;
import org.simbrain.plot.barchart.BarChartComponent;
import org.simbrain.workspace.ConsumingAttribute;
import org.simbrain.workspace.Coupling;
import org.simbrain.workspace.ProducingAttribute;
import org.simbrain.workspace.Workspace;

{

        // Make Network
        NetworkComponent networkComponent = new NetworkComponent("Test Network");
        workspace.addWorkspaceComponent(networkComponent);
        RootNetwork network = networkComponent.getRootNetwork();
        GridLayout layout = new GridLayout(50.0, 50.0, 6);
        int numNeurons = 6;
        layout.setInitialLocation(new Point(10, 10));
        for (int i = 0; i < numNeurons; i++) {
            NakaRushtonNeuron neuron = new NakaRushtonNeuron();
            network.addNeuron(neuron);
        }
        layout.layoutNeurons(network);
        Sparse connection = new Sparse(network, network.getFlatNeuronList(),
                network.getFlatNeuronList());
        connection.setExcitatoryProbability(.2);
        connection.setInhibitoryProbability(.5);
        connection.connectNeurons();    
	network.randomizeNeurons();
	networkComponent.update();
        desktop.getDesktopComponent(networkComponent).getParentFrame().setBounds(20, 20, 446, 337);

        //Make a barchart
        BarChartComponent barChart = new BarChartComponent("Test Chart");
        workspace.addWorkspaceComponent(barChart);
        desktop.getDesktopComponent(barChart).getParentFrame().setBounds(500, 20, 300,300);

	// Make Couplings
        for (int i = 1; i < numNeurons; i++) {
            ProducingAttribute neuronAttribute = networkComponent.getProducingAttribute("Neuron_" + i, "Activation"); 
            ConsumingAttribute barChartAttribute = barChart.getSingleConsumingAttribute("BarChartData" + i);
            workspace.getCouplingManager().addCoupling(new Coupling(neuronAttribute, barChartAttribute));
        }

}
