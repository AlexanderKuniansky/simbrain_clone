import java.awt.Point;
import org.simbrain.network.interfaces.*;
import org.simbrain.network.NetworkComponent;
import org.simbrain.network.layouts.MultipathLayout;
import org.simbrain.network.networks.actorcritic.ActorCritic;
import org.simbrain.workspace.ConsumingAttribute;
import org.simbrain.workspace.Coupling;
import org.simbrain.workspace.ProducingAttribute;
import org.simbrain.workspace.Workspace;
import org.simbrain.network.neurons.LinearNeuron;
import org.simbrain.world.odorworld.OdorWorld;
import org.simbrain.world.odorworld.OdorWorldAgent;
import org.simbrain.world.odorworld.OdorWorldComponent;
import org.simbrain.world.odorworld.OdorWorldEntity;
{

        // Make a 2-d environment
        OdorWorldComponent odorWorld = new OdorWorldComponent("Odor World");
        odorWorld.getWorld().setWorldHeight(400);
        odorWorld.getWorld().setWorldWidth(400);
        workspace.addWorkspaceComponent(odorWorld);
        desktop.getDesktopComponent(odorWorld).getParentFrame().setBounds(508, 34, 400, 400);
        // Mouse
        OdorWorldAgent mouse = new OdorWorldAgent(odorWorld, "MightyMouse", "Mouse.gif", 200,200, OdorWorld.INIT_ORIENTATION);
        mouse.getStimulus().setStimulusVector(new double[] {0, 0, 0, 0, 0, 0, 0, 0 });
        odorWorld.getWorld().addAgent(mouse);
        // Cheese 1
        OdorWorldEntity cheese = new OdorWorldEntity(odorWorld.getWorld(), "Swiss.gif", 100, 100);
        cheese.getStimulus().setStimulusVector(new double[] {5, 0, 3, 0, 0, 0, 0, 0 });
        odorWorld.getWorld().addEntity(cheese);
        cheese.getStimulus().setDispersion(200);
        // Cheese 2
        OdorWorldEntity cheese2 = new OdorWorldEntity(odorWorld.getWorld(), "Swiss.gif", 100, 140);
        cheese2.getStimulus().setStimulusVector(new double[] {5, 0, 3, 0, 0, 0, 0, 0 });
        odorWorld.getWorld().addEntity(cheese2);
        cheese2.getStimulus().setDispersion(200);
        // Poison 1
        OdorWorldEntity poison1 = new OdorWorldEntity(odorWorld.getWorld(), "Poison.gif", 240, 300);
        poison1.getStimulus().setStimulusVector(new double[] {0, 5, -3, 0, 0, 0, 0, 0 });
        poison1.getStimulus().setDispersion(200);
        odorWorld.getWorld().addEntity(poison1);
        // Poison 2
        OdorWorldEntity poison2 = new OdorWorldEntity(odorWorld.getWorld(), "Poison.gif", 300, 300);
        poison2.getStimulus().setStimulusVector(new double[] {0, 5, -3, 0, 0, 0, 0, 0 });
        poison2.getStimulus().setDispersion(200);
        odorWorld.getWorld().addEntity(poison2);

        // Create Network
        NetworkComponent network = new NetworkComponent("Adaptive Critic Network");
        workspace.addWorkspaceComponent(network);
        desktop.getDesktopComponent(network).getParentFrame().setBounds(28, 35, 450, 400);
        MultipathLayout layout = new MultipathLayout(40, 80, 2, MultipathLayout.HORIZONTAL);
        layout.setInitialLocation(new Point(10,10));
        ActorCritic ac = new ActorCritic(network.getRootNetwork(), 4, 3, layout);
        network.getRootNetwork().addNetwork(ac);
        ((LinearNeuron)network.getRootNetwork().getNeuron("Neuron_5")).setAddNoise(true);
        ((LinearNeuron)network.getRootNetwork().getNeuron("Neuron_6")).setAddNoise(true);
        ((LinearNeuron)network.getRootNetwork().getNeuron("Neuron_7")).setAddNoise(true);
        ((LinearNeuron)network.getRootNetwork().getNeuron("Neuron_5")).setLowerBound(-1);
        ((LinearNeuron)network.getRootNetwork().getNeuron("Neuron_6")).setLowerBound(-1);
        ((LinearNeuron)network.getRootNetwork().getNeuron("Neuron_7")).setLowerBound(-1);
        ((LinearNeuron)network.getRootNetwork().getNeuron("Neuron_9")).setLowerBound(-1);
        for (Neuron neuron : network.getRootNetwork().getFlatNeuronList()) {
            neuron.setUpperBound(20);
            //neuron.setLowerBound(-3);                
        }
            
        //Couple Mouse Whiskers to adaptive critic neurons
        ProducingAttribute leftWhisker1 = odorWorld.getProducingAttribute("MightyMouse","Left[1]");
        ProducingAttribute rightWhisker1 = odorWorld.getProducingAttribute("MightyMouse","Right[1]");
        ProducingAttribute leftWhisker2 = odorWorld.getProducingAttribute("MightyMouse","Left[2]");
        ProducingAttribute rightWhisker2 = odorWorld.getProducingAttribute("MightyMouse","Right[2]");
        ConsumingAttribute inputNeuron1 = network.getConsumingAttribute("Neuron_1", "Activation"); 
        ConsumingAttribute inputNeuron2 = network.getConsumingAttribute("Neuron_2", "Activation"); 
        ConsumingAttribute inputNeuron3 = network.getConsumingAttribute("Neuron_3", "Activation"); 
        ConsumingAttribute inputNeuron4 = network.getConsumingAttribute("Neuron_4", "Activation"); 
        workspace.getCouplingManager().addCoupling(new Coupling(leftWhisker1, inputNeuron1));
        workspace. getCouplingManager().addCoupling(new Coupling(rightWhisker1, inputNeuron2));
        workspace.getCouplingManager().addCoupling(new Coupling(leftWhisker2, inputNeuron3));
        workspace. getCouplingManager().addCoupling(new Coupling(rightWhisker2, inputNeuron4));
 
        //Couple Output Neurons to motion
        ProducingAttribute actor1 = network.getProducingAttribute("Neuron_5", "Activation"); 
        ProducingAttribute actor2 = network.getProducingAttribute("Neuron_6", "Activation"); 
        ProducingAttribute actor3 = network.getProducingAttribute("Neuron_7", "Activation"); 
        ConsumingAttribute turnLeft = odorWorld.getConsumingAttribute("MightyMouse", "Left"); 
        ConsumingAttribute goStraight = odorWorld.getConsumingAttribute("MightyMouse", "Forward"); 
        ConsumingAttribute turnRight = odorWorld.getConsumingAttribute("MightyMouse", "Right"); 
        workspace. getCouplingManager().addCoupling(new Coupling(actor1, turnLeft));
        workspace. getCouplingManager().addCoupling(new Coupling(actor2, goStraight));
        workspace. getCouplingManager().addCoupling(new Coupling(actor3, turnRight));
        
        //Couple left and right Reward sensors to reward neurons in Actor-critic network
        ProducingAttribute leftReward = odorWorld.getProducingAttribute("MightyMouse","Left[3]");
        ProducingAttribute rightReward = odorWorld.getProducingAttribute("MightyMouse","Right[3]");
        ConsumingAttribute rewardNeuron = network.getConsumingAttribute("Neuron_9", "Activation"); 
        workspace.getCouplingManager().addCoupling(new Coupling(leftReward, rewardNeuron));
        workspace.getCouplingManager().addCoupling(new Coupling(rightReward, rewardNeuron));

        ac.setTrain(true);
}