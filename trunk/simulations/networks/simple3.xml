<org.simbrain.network.core.Network>
  <neuronList>
    <org.simbrain.network.core.Neuron>
      <updateRule class="org.simbrain.network.neuron_update_rules.ClampedNeuronRule"/>
      <id>Neuron_1</id>
      <label></label>
      <activation>-2.0</activation>
      <lowerBound>-10.0</lowerBound>
      <upperBound>10.0</upperBound>
      <increment>1.0</increment>
      <buffer>-2.0</buffer>
      <inputValue>0.0</inputValue>
      <parent reference="../../.."/>
      <x>141.5708847175384</x>
      <y>108.62391549020256</y>
      <clamped>false</clamped>
      <targetValue>0.0</targetValue>
      <updatePriority>0</updatePriority>
    </org.simbrain.network.core.Neuron>
    <org.simbrain.network.core.Neuron>
      <updateRule class="org.simbrain.network.neuron_update_rules.ClampedNeuronRule"/>
      <id>Neuron_2</id>
      <label></label>
      <activation>5.0</activation>
      <lowerBound>-10.0</lowerBound>
      <upperBound>10.0</upperBound>
      <increment>1.0</increment>
      <buffer>5.0</buffer>
      <inputValue>0.0</inputValue>
      <parent reference="../../.."/>
      <x>141.5708847175384</x>
      <y>155.85915492957747</y>
      <clamped>false</clamped>
      <targetValue>0.0</targetValue>
      <updatePriority>0</updatePriority>
    </org.simbrain.network.core.Neuron>
    <org.simbrain.network.core.Neuron>
      <updateRule class="org.simbrain.network.neuron_update_rules.ClampedNeuronRule"/>
      <id>Neuron_3</id>
      <label></label>
      <activation>0.0</activation>
      <lowerBound>-10.0</lowerBound>
      <upperBound>10.0</upperBound>
      <increment>1.0</increment>
      <buffer>0.0</buffer>
      <inputValue>0.0</inputValue>
      <parent reference="../../.."/>
      <x>141.5708847175384</x>
      <y>61.81649960567043</y>
      <clamped>false</clamped>
      <targetValue>0.0</targetValue>
      <updatePriority>0</updatePriority>
    </org.simbrain.network.core.Neuron>
    <org.simbrain.network.core.Neuron>
      <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
        <slope>1.0</slope>
        <bias>0.0</bias>
        <noiseGenerator>
          <distributionIndex>0</distributionIndex>
          <upperBound>1.0</upperBound>
          <lowerBound>-1.0</lowerBound>
          <mean>0.5</mean>
          <standardDeviation>0.5</standardDeviation>
          <clipping>true</clipping>
          <randomGenerator serialization="custom">
            <java.util.Random>
              <default>
                <seed>212907969888678</seed>
                <nextNextGaussian>0.0</nextNextGaussian>
                <haveNextNextGaussian>false</haveNextNextGaussian>
              </default>
            </java.util.Random>
          </randomGenerator>
        </noiseGenerator>
        <addNoise>false</addNoise>
        <clipping>true</clipping>
      </updateRule>
      <id>Neuron_4</id>
      <label></label>
      <activation>3.0</activation>
      <lowerBound>-10.0</lowerBound>
      <upperBound>10.0</upperBound>
      <increment>0.1</increment>
      <buffer>3.0</buffer>
      <inputValue>0.0</inputValue>
      <parent reference="../../.."/>
      <x>216.6768787671665</x>
      <y>107.66941329056748</y>
      <clamped>false</clamped>
      <targetValue>0.0</targetValue>
      <updatePriority>0</updatePriority>
    </org.simbrain.network.core.Neuron>
  </neuronList>
  <synapseList>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../../neuronList/org.simbrain.network.core.Neuron[3]"/>
      <target reference="../../../neuronList/org.simbrain.network.core.Neuron[4]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.ClampedSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_1</id>
      <strength>-1.0</strength>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <sendWeightedInput>true</sendWeightedInput>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../../neuronList/org.simbrain.network.core.Neuron[2]"/>
      <target reference="../../../neuronList/org.simbrain.network.core.Neuron[4]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.ClampedSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_2</id>
      <strength>1.0</strength>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <sendWeightedInput>true</sendWeightedInput>
    </org.simbrain.network.core.Synapse>
    <org.simbrain.network.core.Synapse>
      <parentNetwork reference="../../.."/>
      <source reference="../../../neuronList/org.simbrain.network.core.Neuron"/>
      <target reference="../../../neuronList/org.simbrain.network.core.Neuron[4]"/>
      <learningRule class="org.simbrain.network.synapse_update_rules.ClampedSynapseRule">
        <clipped>false</clipped>
      </learningRule>
      <id>Synapse_3</id>
      <strength>1.0</strength>
      <increment>1.0</increment>
      <upperBound>10.0</upperBound>
      <lowerBound>-10.0</lowerBound>
      <delay>0</delay>
      <sendWeightedInput>true</sendWeightedInput>
    </org.simbrain.network.core.Synapse>
  </synapseList>
  <groupList/>
  <textList/>
  <updateManager>
    <actionList class="java.util.concurrent.CopyOnWriteArrayList" serialization="custom">
      <java.util.concurrent.CopyOnWriteArrayList>
        <default/>
        <int>1</int>
        <org.simbrain.network.update__actions.BufferedUpdate>
          <network reference="../../../../.."/>
        </org.simbrain.network.update__actions.BufferedUpdate>
      </java.util.concurrent.CopyOnWriteArrayList>
    </actionList>
    <availableActionList class="java.util.concurrent.CopyOnWriteArrayList" serialization="custom">
      <java.util.concurrent.CopyOnWriteArrayList>
        <default/>
        <int>1</int>
        <org.simbrain.network.update__actions.PriorityUpdate>
          <network reference="../../../../.."/>
        </org.simbrain.network.update__actions.PriorityUpdate>
      </java.util.concurrent.CopyOnWriteArrayList>
    </availableActionList>
    <network reference="../.."/>
  </updateManager>
  <synapseRouter>
    <routingMap/>
    <incomingUnified/>
    <outgoingUnified/>
    <autoRouting>false</autoRouting>
  </synapseRouter>
  <time>0.0</time>
  <timeStep>0.01</timeStep>
  <timeType>DISCRETE</timeType>
  <clampWeights>false</clampWeights>
  <clampNeurons>false</clampNeurons>
  <prioritySortedNeuronList>
    <org.simbrain.network.core.Neuron reference="../../neuronList/org.simbrain.network.core.Neuron"/>
    <org.simbrain.network.core.Neuron reference="../../neuronList/org.simbrain.network.core.Neuron[2]"/>
    <org.simbrain.network.core.Neuron reference="../../neuronList/org.simbrain.network.core.Neuron[3]"/>
    <org.simbrain.network.core.Neuron reference="../../neuronList/org.simbrain.network.core.Neuron[4]"/>
  </prioritySortedNeuronList>
  <priorityComparator>
    <outer-class reference="../.."/>
  </priorityComparator>
  <neuronIdGenerator>
    <rootName>Neuron</rootName>
    <index>5</index>
  </neuronIdGenerator>
  <synapseIdGenerator>
    <rootName>Synapse</rootName>
    <index>4</index>
  </synapseIdGenerator>
  <groupIdGenerator>
    <rootName>Group</rootName>
    <index>1</index>
  </groupIdGenerator>
  <roundOffActivationValues>false</roundOffActivationValues>
  <precision>0</precision>
</org.simbrain.network.core.Network>